import requests
import json

def test_kazakh_language_detection():
    print("üß™ Testing Kazakh Language Support")
    print("=" * 40)
    
    # Test data for Kazakh language
    kazakh_test_data = {
        "greetings": [
            "—Å”ô–ª–µ–º–µ—Ç—Å—ñ–∑ –±–µ, “õ–∞–ª–∞–π—Å—ã–∑?",
            "“õ–∞–π—ã—Ä–ª—ã –∫“Ø–Ω, –º–µ–Ω —Å—ñ–∑–≥–µ –∫”©–º–µ–∫—Ç–µ—Å–µ –∞–ª–∞–º—ã–Ω",
            "—Å”ô–ª–µ–º, –º”ô—Å–µ–ª–µ“£—ñ–∑ “õ–∞–Ω–¥–∞–π?"
        ],
        "resolutions": [
            "–º”ô—Å–µ–ª–µ —à–µ—à—ñ–ª–¥—ñ, —Ä–∞—Ö–º–µ—Ç",
            "–∫”©–º–µ–∫—Ç–µ—Å—Ç—ñ“£—ñ–∑, –µ–Ω–¥—ñ –±–∞—Ä–ª—ã“ì—ã –¥“±—Ä—ã—Å",
            "—à–µ—à—Ç—ñ–º, –µ–Ω–¥—ñ –∂“±–º—ã—Å —ñ—Å—Ç–µ–π–¥—ñ"
        ],
        "professional": [
            "—Ä–∞—Ö–º–µ—Ç, ”©—Ç—ñ–Ω–µ–º—ñ–Ω, –∫–µ—à—ñ—Ä—ñ“£—ñ–∑",
            "—Ä–∏–∑–∞–º—ã–Ω, –±–∞—Ä–ª—ã“ì—ã –∂–∞“õ—Å—ã"
        ]
    }
    
    print("üìù Kazakh Test Phrases:")
    for category, phrases in kazakh_test_data.items():
        print(f"\n{category.upper()}:")
        for phrase in phrases:
            print(f"  ‚Ä¢ {phrase}")
    
    print("\nüéØ Expected Results:")
    print("‚úÖ Language detection: kk (Kazakh)")
    print("‚úÖ Greeting detection: True")
    print("‚úÖ Resolution detection: resolved")
    print("‚úÖ Professional indicators: detected")
    
    print("\nüìä Language Support Summary:")
    print("‚Ä¢ Russian (ru): Full support")
    print("‚Ä¢ Kazakh (kk): Full support")
    print("‚Ä¢ Auto-detection: Enabled")
    print("‚Ä¢ Fallback: Russian (if detection fails)")

def test_api_with_kazakh():
    print("\nüåê Testing API with Kazakh Language")
    print("=" * 40)
    
    base_url = input("Enter your API URL (or press Enter to skip): ").strip()
    
    if not base_url:
        print("‚è≠Ô∏è Skipping API test")
        return
    
    if not base_url.startswith("http"):
        base_url = f"https://{base_url}"
    
    try:
        # Test API health
        response = requests.get(f"{base_url}/docs", timeout=10)
        if response.status_code == 200:
            print("‚úÖ API is accessible")
            
            # Test upload endpoint (without actual file)
            print("\nüì§ Testing upload endpoint...")
            print("Note: You can upload a Kazakh audio file to test language detection")
            print(f"Endpoint: POST {base_url}/api/upload-call")
            print("Parameters: file (audio), language (optional - auto-detected)")
            
        else:
            print(f"‚ùå API returned status: {response.status_code}")
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå Cannot connect to API: {e}")

def main():
    test_kazakh_language_detection()
    test_api_with_kazakh()
    
    print("\nüéâ Kazakh Language Support Added!")
    print("\nüìã Features:")
    print("‚Ä¢ Automatic language detection (Russian/Kazakh)")
    print("‚Ä¢ Kazakh-specific keywords and phrases")
    print("‚Ä¢ Bilingual emotion analysis")
    print("‚Ä¢ Language-aware scoring")
    print("‚Ä¢ Fallback to Russian if detection fails")
    
    print("\nüöÄ Usage:")
    print("1. Upload audio file to /api/upload-call")
    print("2. Language will be auto-detected")
    print("3. Assessment will use appropriate language models")
    print("4. Results include detected language information")

if __name__ == "__main__":
    main()
